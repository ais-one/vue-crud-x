import{i as e,o as t,y as s,z as o,e as n,f as a,C as i,O as h,j as u,F as r}from"./vendor.f4e9483c.js";const d=document.createElement("template");d.innerHTML='\n<style>\ncanvas {\n  background-color: var(--vcxwc-sign-pad-background-color, #ddd);\n}\n</style>\n<canvas id="canvas"></canvas>\n';class c extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"}).appendChild(d.content.cloneNode(!0)),console.log("SignPad()"),this.mouse={current:{x:0,y:0},previous:{x:0,y:0},down:!1,move:!1},this.handleMouseDown=this.handleMouseDown.bind(this),this.handleMouseUp=this.handleMouseUp.bind(this),this.handleMouseMove=this.handleMouseMove.bind(this),this.currentMouse=this.currentMouse.bind(this),this.draw=this.draw.bind(this)}static get observedAttributes(){return["value","width","height"]}get value(){return this.getAttribute("value")}set value(e){this.setAttribute("value",e||"")}attributeChangedCallback(e,t,s){const o=this.shadowRoot.querySelector("#canvas");switch(e){case"width":o.width=s;break;case"height":o.height=s}}connectedCallback(){this.mouse={current:{x:0,y:0},previous:{x:0,y:0},down:!1,move:!1},this.hasAttribute("value")||this.setAttribute("value","");const e=this.shadowRoot.querySelector("#canvas"),t=e.getContext("2d");t.translate(.5,.5),t.imageSmoothingEnabled=!1;const s=JSON.parse(this.getAttribute("context2d"));for(const o in s)t[o]=s[o];e.addEventListener("mousedown",this.handleMouseDown),e.addEventListener("mouseup",this.handleMouseUp),e.addEventListener("mousemove",this.handleMouseMove)}adoptedCallback(){}disconnectedCallback(){const e=this.shadowRoot.querySelector("#canvas");e.removeEventListener("mousedown",this.handleMouseDown),e.removeEventListener("mouseup",this.handleMouseUp),e.removeEventListener("mousemove",this.handleMouseMove)}handleMouseDown(e){this.mouse.down=!0,this.mouse.move=!1,this.mouse.current={x:e.offsetX,y:e.offsetY};const t=this.shadowRoot.querySelector("#canvas"),s=t.getContext("2d");s.clearRect(0,0,t.width,t.height),s.beginPath(),this.value="";const{x:o,y:n}=this.currentMouse();s.moveTo(o,n)}handleMouseUp(){const e=this.shadowRoot.querySelector("#canvas");this.mouse.move?this.value=e.toDataURL("image/png"):this.value="";const t=new CustomEvent("input",{detail:this.value});this.dispatchEvent(t),this.mouse.down=!1,this.mouse.move=!1}handleMouseMove(e){this.mouse.move=!0,this.mouse.current={x:e.offsetX,y:e.offsetY},this.draw(e)}draw(e){if(this.mouse.down){const e=this.shadowRoot.querySelector("#canvas"),t=e.getContext("2d");t.clearRect(0,0,e.width,e.height);const{x:s,y:o}=this.currentMouse();t.lineTo(s,o),t.stroke()}}currentMouse(){return{x:this.mouse.current.x,y:this.mouse.current.y}}}customElements.define("vcxwc-sign-pad",c);const l={name:"SignPad",setup(){const s=e("");t((async()=>{console.log("Demo Signpad")}));return{imageDataUrl:s,signDataFn:e=>{alert("see console log for signature data"),console.log("imageDataUrl",s.value)}}}},v=r();s("data-v-2c2b2258");const m={class:"container"},g=u("h1",null,"Sign Pad Custom Element",-1);o();const w=v(((e,t,s,o,r,d)=>(n(),a("div",m,[g,i(u("vcxwc-sign-pad",{width:"200",height:"200","onUpdate:modelValue":t[1]||(t[1]=e=>o.imageDataUrl=e),context2d:'{ "lineWidth": 2, "strokeStyle": "#00f" }'},null,512),[[h,o.imageDataUrl]]),u("p",null,[u("button",{onClick:t[2]||(t[2]=(...e)=>o.signDataFn&&o.signDataFn(...e))},"See Signature Data")])]))));l.render=w,l.__scopeId="data-v-2c2b2258";export default l;
